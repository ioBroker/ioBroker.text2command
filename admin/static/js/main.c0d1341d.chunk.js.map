{"version":3,"sources":["serviceWorker.js","components/Rule.js","components/Drawer.js","components/RuleEditor.js","components/CreateRuleDialog.js","components/Layout.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Rule","React","forwardRef","props","ref","name","handleEdit","handleCopy","rule","isDragging","connectDragSource","connectDropTarget","id","selectRule","selectedRule","_break","matchingRules","unsavedRules","index","theme","removeMatched","words","unique","classes","makeStyles","listItem","cursor","transition","position","paddingTop","paddingBottom","borderBottom","palette","text","primary","startsWith","listItemText","listItemTextPrimary","color","textOverflow","overflow","whiteSpace","listItemTextSecondary","opacity","type","fontStyle","dot","backgroundColor","top","right","height","fontSize","borderRadius","padding","textAlign","maximize","dark","marginTop","spacing","ruleButton","editButton","width","bottom","left","paddingLeft","emptyButton","multiline","marginBottom","elementRef","useRef","useImperativeHandle","getNode","current","selectRuleMemo","useCallback","handleEditMemo","handleCopyMemo","useState","ruleStyle","setRuleStyle","useEffect","length","matchingRule","find","item","indexOf","setTimeout","secondary","light","timer","background","default","style","Object","assign","ListItem","onClick","selected","className","clsx","root","ListItemText","ListItemIcon","Tooltip","title","I18n","t","IconButton","size","ItemTypes","DropTarget","hover","monitor","component","node","dragIndex","getItem","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","hoverClientY","getClientOffset","y","moveRule","connect","dropTarget","DragSource","beginDrag","dragSource","isTouchDevice","a","check","userAgent","vendor","opera","test","substr","mobileCheck","maxTouchPoints","msMaxTouchPoints","CustomTooltip","withStyles","tooltip","Drawer","getDefaultSettings","setState","localSettings","settings","onAlive","val","alive","onResponse","toast","toastError","socket","getState","instance","handleTextCommand","event","textCommand","target","value","testTimer","clearTimeout","matched","findMatchingRules","map","number","handleSubmit","iconPlay","key","err","handleOpenSettingsModal","isSettingsDialogOpen","handleDialogSelectIdSubmit","selectedSettingsName","handleDelete","removeRule","handleCloseConfirmRemoveDialog","isConfirmRemoveDialogOpen","handleSearch","matchedRules","rules","filter","toLowerCase","includes","filteredRules","searchedValue","toggleSearch","isSearchActive","createSettingsModal","handleClose","isSettingsWasNotSaved","handleChange","undefined","checked","Dialog","open","onClose","fullWidth","onExited","DialogTitle","Typography","variant","align","DialogContent","noValidate","autoComplete","Grid","container","direction","FormControl","settingsItem","InputLabel","Select","width100","onChange","language","MenuItem","Children","toArray","option","selectIdText","TextField","label","sayitInstance","Button","selectIdButton","showDialogSelectId","selectedId","processorId","helperText","processorTimeout","e","FormControlLabel","control","Checkbox","writeEveryAnswer","noNegativeMessage","DialogActions","saveSettings","startIcon","mainIcons","icon","handler","handleOpen","createIcons","iconsData","this","subscribeState","document","getElementsByClassName","scrollIntoView","unsubscribeState","prevProps","prevState","findMatched","JSON","parse","stringify","imagePrefix","onOk","autoFocus","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","elevation","severity","isMobile","closeDrawer","settingsDialog","renderedRules","additionalIcons","push","Box","main","Toolbar","toolbar","disableGutters","search","InputProps","endAdornment","closeBtn","flexGrow","iconNotAlive","DndProvider","backend","TouchBackend","HTML5Backend","List","list","onKeyDown","inputProps","play","renderConfirmDialog","renderSelectIdDialog","renderToast","Component","boxSizing","minWidth","overflowX","overflowY","header","minHeight","border","divider","textInput","breakpoints","down","settingsTitle","maxWidth","settingsContent","flexDirection","display","common","white","float","marginRight","flexBasis","RuleEditor","defaultState","editable","args","ack","localRule","showDialog","editIndex","createConfirmModalActions","updateConfig","pendingSelectedRuleId","clearStateOnConfirmModalUnmount","revertChangesFromConfig","cancelSavingChanges","closeConfirmDialog","dontSaveAndGo","handleSaveAndGo","submitForm","saveAndGoBtn","btnDanger","createSaveSettingsForm","handleSave","isLocalStateWasUpdated","revertChanges","emptyButtons","confirmChanges","createInput","onOpenSelectDialog","note","disabled","keywords","onSwitchChange","inputOid","inputOidButton","textField","rowPadding","switchControl","Switch","FormLabel","createOptionsData","handlers","isKeyWordsDisabled","keywordsText","breakOnSwitch","openSelectIdDialog","param1OnSwitch","param2Text","param2OnSwitch","param3OnSwitch","confirmText","confirmOnSwitch","createInputHandlers","_this","arg","showDialogId","onIDSelected","unsavedRule","isEqual","wasChangedGlobally","setUnsavedRule","removeUnsavedRule","lang","forceUpdate","isLeftBarOpen","toggleLeftBar","toggleIcon","box","boxMobile","boxDesktop","Paper","gridTemplateColumns","rowSpace","PureComponent","margin","justifyContent","mainTitle","row","alignItems","marginLeft","zIndex","noRulesText","fontWeight","CreateRuleDialog","defaultRule","isDisabled","setRuleOnMount","isEdit","cleanState","isCopy","finishEdit","getAvailableOptions","commands","uniqueOptions","concat","getUniqueName","ruleName","matchingNames","slice","isUnique","lastChar","createForm","onSubmitHandler","handleSubmitOnCopy","handleSubmitOnEdit","handleSubmitOnCreate","FormGroup","shrink","isError","labelId","select","keyCode","preventDefault","stopPropagation","existingNames","setDialogContent","isOpen","onEnter","Layout","getSelectedLanguageCommands","getLanguage","entries","command","rest","template","sourceRule","_","sortRules","splice","add","uuid","shortDataRule","isUnsavedChanges","values","updateRule","newRule","editableRule","updatedRuleOptions","_rule","it","readConfig","newConfig","saveConfig","currentSelectedRule","ids","updatedCurrentRules","updatedRules","getRuleShortData","getDataFromConfig","currentRules","obj","alert","ready","localStorage","actualRules","isRuleWasUpdatedGlobally","newState","localeSettings","closeModal","setItem","menuSize","parseFloat","rulesWithId","en","setLanguage","Fragment","anchor","themeType","renderModalDialog","customClassName","hidden","opened","layout","primaryMinSize","primaryIndex","secondaryMinSize","onSecondaryPaneSizeChange","onDragEnd","toString","secondaryInitialSize","withWidth","App","extendedProps","translations","require","getSystemConfig","systemConfig","showError","getObject","adapterName","native","setObject","bind","renderError","GenericApp","logo","themeName","Utils","getThemeName","version","host","Sentry","dsn","release","integrations","SentryIntegrations","build","ReactDOM","render","onThemeChange","_theme","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c0d1341d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\");\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React, {\r\n    useRef,\r\n    useImperativeHandle,\r\n    useCallback,\r\n    useState,\r\n    useEffect,\r\n} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { DropTarget, DragSource } from 'react-dnd';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MaximizeIcon from '@material-ui/icons/Maximize';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\n\r\nconst Rule = React.forwardRef((props, ref) => {\r\n    const {\r\n        name,\r\n        handleEdit,\r\n        handleCopy,\r\n        rule,\r\n        isDragging,\r\n        connectDragSource,\r\n        connectDropTarget,\r\n        id,\r\n        selectRule,\r\n        selectedRule,\r\n        _break,\r\n        matchingRules,\r\n        unsavedRules,\r\n        index,\r\n        theme,\r\n        removeMatched,\r\n        words,\r\n        unique,\r\n    } = props;\r\n\r\n    const classes = makeStyles({\r\n        listItem: {\r\n            cursor: 'pointer',\r\n            transition: 'background-color 0.3s linear',\r\n            position: 'relative',\r\n            paddingTop: 4,\r\n            paddingBottom: 12,\r\n            borderBottom: '1px dashed ' + theme.palette.text.primary + (theme.palette.text.primary.startsWith('rgb') ? '' : '30'),\r\n        },\r\n        listItemText: {\r\n        },\r\n        listItemTextPrimary: {\r\n            color: theme.palette.text.primary,\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n        },\r\n        listItemTextSecondary: {\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n            opacity: theme.palette.type === 'dark' ? 0.2 : 0.7,\r\n            fontStyle: 'italic',\r\n        },\r\n        dot: {\r\n            position: 'absolute',\r\n            backgroundColor: 'red',\r\n            top: 3,\r\n            right: 15,\r\n            height: 10,\r\n            fontSize: 10,\r\n            borderRadius: 10,\r\n            padding: '0 5px 5px 5px',\r\n            textAlign: 'center',\r\n            color: '#FFF',\r\n        },\r\n        maximize: {\r\n            color: theme.palette.error?.dark,\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        ruleButton: {\r\n            paddingTop: theme.spacing(1.5),\r\n        },\r\n        editButton: {\r\n            height: 32,\r\n        },\r\n        words: {\r\n            fontSize: 12,\r\n            opacity: 0.5,\r\n            width: 'calc(100% - 40px)',\r\n            position: 'absolute',\r\n            bottom: 4,\r\n            left: 0,\r\n            paddingLeft: 17,\r\n            color: theme.palette.text.primary,\r\n            whiteSpace: 'nowrap',\r\n            overflow: 'hidden',\r\n            textOverflow: 'ellipsis'\r\n        },\r\n        emptyButton: {\r\n            width: 30,\r\n        },\r\n        multiline: {\r\n            marginTop: 0,\r\n            marginBottom: 12,\r\n        }\r\n    })();\r\n\r\n    const elementRef = useRef(null);\r\n    connectDragSource(elementRef);\r\n    connectDropTarget(elementRef);\r\n    const opacity = isDragging ? 0 : 1;\r\n    useImperativeHandle(ref, () => ({\r\n        getNode: () => elementRef.current,\r\n    }));\r\n\r\n    const selectRuleMemo = useCallback(() => selectRule(id), [id, selectRule]);\r\n    const handleEditMemo = useCallback(() => handleEdit(id), [id, handleEdit]);\r\n    const handleCopyMemo = useCallback(() => handleCopy(id), [id, handleCopy]);\r\n\r\n    const [ruleStyle, setRuleStyle] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (matchingRules.length) {\r\n            const matchingRule = matchingRules.find(item => item.indexOf === index);\r\n            if (matchingRule) {\r\n                setTimeout(() => setRuleStyle({backgroundColor: theme.palette.type === 'dark' ? theme?.palette?.secondary.dark : theme?.palette?.secondary.light}), matchingRule.timer);\r\n\r\n                setTimeout(() => {\r\n                    setRuleStyle(selectedRule.id === id ? {backgroundColor: theme?.palette?.background?.default} : {});\r\n                    if (_break || index === matchingRules[matchingRules.length - 1].indexOf) {\r\n                        removeMatched();\r\n                    }\r\n                }, 1500 * (matchingRule.index + 1));\r\n            } // only when matching rules have been changed\r\n        } // eslint-disable-next-line\r\n    }, [matchingRules]);\r\n\r\n    let secondary = rule !== name ? rule || '' : '';\r\n\r\n    return <div\r\n        ref={elementRef}\r\n        style={Object.assign({}, {opacity}, ruleStyle)}>\r\n        <ListItem\r\n            onClick={selectRuleMemo}\r\n            selected={selectedRule?.id === id}\r\n            className={clsx(selectedRule?.id === id && 'rule-selected')}\r\n            classes={{root: classes.listItem}}\r\n        >\r\n            <ListItemText\r\n                primary={name}\r\n                secondary={secondary}\r\n                classes={{\r\n                    primary: classes.listItemTextPrimary,\r\n                    secondary: classes.listItemTextSecondary,\r\n                    multiline: classes.multiline}}\r\n                className={classes.listItemText}\r\n            />\r\n            <ListItemIcon>\r\n                {\r\n                    _break ?\r\n                        <Tooltip title={I18n.t('Interrupt processing')}>\r\n                            <MaximizeIcon className={clsx(classes.ruleButton, classes.maximize)} />\r\n                        </Tooltip>\r\n                    :\r\n                        <Tooltip title={I18n.t('Do not interrupt processing')}><ArrowDownwardIcon className={classes.ruleButton} color=\"primary\"/></Tooltip>\r\n                }\r\n                {!unique ? <Tooltip title={I18n.t('Copy rule')}>\r\n                    <IconButton onClick={handleCopyMemo} size=\"small\" className={classes.editButton}>\r\n                        <FileCopy />\r\n                    </IconButton>\r\n                </Tooltip> : <div className={classes.emptyButton} />}\r\n                <Tooltip title={I18n.t('Edit name or type of rule')}>\r\n                    <IconButton onClick={handleEditMemo} size=\"small\" className={classes.editButton}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </ListItemIcon>\r\n            {unsavedRules[id] && <div className={classes.dot}>{I18n.t('unsaved')}</div>}\r\n            <div className={classes.words}>[{words}]</div>\r\n        </ListItem>\r\n    </div>;\r\n});\r\n\r\nconst ItemTypes = {\r\n    RULE: 'rule',\r\n};\r\n\r\nexport default DropTarget(\r\n    ItemTypes.RULE,\r\n    {\r\n        hover(props, monitor, component) {\r\n            if (!component) {\r\n                return null;\r\n            }\r\n\r\n            const node = component.getNode();\r\n            if (!node) {\r\n                return null;\r\n            }\r\n            const dragIndex = monitor.getItem().index;\r\n            const hoverIndex = props.index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n\r\n            const hoverBoundingRect = node.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            props.moveRule(dragIndex, hoverIndex);\r\n\r\n            monitor.getItem().index = hoverIndex;\r\n        },\r\n    },\r\n    connect => ({ connectDropTarget: connect.dropTarget() })\r\n)(\r\n    DragSource(\r\n        ItemTypes.RULE,\r\n        {\r\n            beginDrag: props => ({\r\n                id: props.id,\r\n                index: props.index,\r\n            }),\r\n        },\r\n        (connect, monitor) => ({\r\n            connectDragSource: connect.dragSource(),\r\n            isDragging: monitor.isDragging(),\r\n        })\r\n    )(Rule)\r\n);\r\n\r\nRule.propTypes = {\r\n    removeRule: PropTypes.func,\r\n    name: PropTypes.string.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    isDragging: PropTypes.bool,\r\n    connectDropTarget: PropTypes.func,\r\n    connectDragTarget: PropTypes.func,\r\n    _break: PropTypes.bool.isRequired,\r\n    selectRule: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    matchingRules: PropTypes.array,\r\n    unique: PropTypes.bool,\r\n    selectedRule: PropTypes.shape({id: PropTypes.string}),\r\n    unsavedRules: PropTypes.object,\r\n};\r\n","import React, { Component, Children } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { TouchBackend } from 'react-dnd-touch-backend';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\n// Material UI Components\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport List from '@material-ui/core/List';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n// icons\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FormatClearIcon from '@material-ui/icons/FormatClear';\r\nimport ClearIcon from '@material-ui/icons/Close';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\n\r\nimport Rule from './Rule';\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\nfunction mobileCheck() {\r\n    let check = false;\r\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series([46])0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br([ev])w|bumb|bw-([nu])|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do([cp])o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly([-_])|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-([mpt])|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c([- _agpst])|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac([ \\-/])|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja([tv])a|jbro|jemu|jigs|kddi|keji|kgt([ /])|klon|kpt |kwc-|kyo([ck])|le(no|xi)|lg( g|\\/([klu])|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t([- ov])|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30([02])|n50([025])|n7(0([01])|10)|ne(([cm])-|on|tf|wf|wg|wt)|nok([6i])|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan([adt])|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c([-01])|47|mc|nd|ri)|sgh-|shar|sie([-m])|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel([im])|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c([- ])|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0, 4))) check = true; }(navigator.userAgent || navigator.vendor || window.opera));\r\n    return check;\r\n}\r\n\r\nfunction isTouchDevice() {\r\n    if (!mobileCheck()) {\r\n        return false;\r\n    }\r\n    return (('ontouchstart' in window)\r\n        || (navigator.maxTouchPoints > 0)\r\n        || (navigator.msMaxTouchPoints > 0));\r\n}\r\n\r\nconst styles = theme => ({\r\n    test: {\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        paddingLeft: theme.spacing(1)\r\n    },\r\n    main: {\r\n        minWidth: 300,\r\n        overflow: 'hidden',\r\n        height: '100%',\r\n    },\r\n    toolbar: {\r\n        background: theme.palette.primary.main,\r\n        position: 'relative',\r\n    },\r\n    list: {\r\n        height: 'calc(100% - 48px - 48px - 8px)',\r\n        overflowX: 'hidden',\r\n        overflowY: 'auto',\r\n        paddingTop: 0.,\r\n    },\r\n    root: {\r\n        width: 'calc(100% - 48px)',\r\n        // '& .MuiInputLabel-outlined-70.MuiInputLabel-marginDense-66': {\r\n        //     transform: '',\r\n        // },\r\n    },\r\n    header: {\r\n        minHeight: 44,\r\n        height: 'auto',\r\n        padding: theme.spacing(1.3),\r\n        border: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    textInput: {\r\n        width: '60%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n    settingsTitle: {\r\n        fontSize: '20px',\r\n        maxWidth: 145,\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: theme.spacing(1),\r\n        },\r\n    },\r\n    settingsContent: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column',\r\n            display: 'flex',\r\n        },\r\n    },\r\n    closeBtn: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n        color: theme.palette.common.white,\r\n    },\r\n    iconNotAlive: {\r\n        color: '#ffc10a',\r\n        float: 'right',\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    search: {\r\n        flexBasis: '80%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexBasis: '70%',\r\n        },\r\n    },\r\n    settingsItem: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    width100: {\r\n        width: '100%',\r\n    },\r\n    selectIdText: {\r\n        width: 'calc(100% - 50px)'\r\n    },\r\n    selectIdButton: {\r\n        minWidth: 40,\r\n    }\r\n});\r\n\r\nconst tooltipStyles = theme => ({\r\n    tooltip: {\r\n        fontSize: 14,\r\n    },\r\n});\r\n\r\nconst CustomTooltip = withStyles(tooltipStyles)(Tooltip);\r\n\r\nclass Drawer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            textCommand: '',\r\n            matchingRules: [],\r\n            isSettingsDialogOpen: false,\r\n            isConfirmRemoveDialogOpen: false,\r\n            isSearchActive: false,\r\n            filteredRules: [],\r\n            searchedValue: '',\r\n            localSettings: {\r\n                language: this.props.settings.language || '',\r\n                processorId:  this.props.settings.processorId || '',\r\n                processorTimeout:  this.props.settings.processorTimeout || 1000,\r\n                sayitInstance:  this.props.settings.sayitInstance || '',\r\n            },\r\n            toast: null,\r\n            alive: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.subscribeState(`text2command.${this.props.instance}.response`, this.onResponse);\r\n        this.props.socket.subscribeState(`system.adapter.text2command.${this.props.instance}.alive`, this.onAlive);\r\n\r\n        if (this.props.selectedRule && this.props.selectedRule.id) {\r\n            //scroll to\r\n            setTimeout(() => {\r\n                const rules = window.document.getElementsByClassName('rule-selected');\r\n                if (rules.length) {\r\n                    rules[0].scrollIntoView()\r\n                }\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.unsubscribeState(`text2command.${this.props.instance}.response`, this.onResponse);\r\n        this.props.socket.unsubscribeState(`system.adapter.text2command.${this.props.instance}.alive`, this.onAlive);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.settings !== prevProps.settings && this.props.settings) {\r\n            this.getDefaultSettings();\r\n        }\r\n    }\r\n\r\n    getDefaultSettings = () => {\r\n        this.setState({\r\n            localSettings: {\r\n                ...this.props.settings,\r\n            },\r\n        });\r\n    };\r\n\r\n    onAlive = (id, state) => {\r\n        if (state && state.val) {\r\n            !this.state.alive && this.setState({alive: true});\r\n        } else {\r\n            this.state.alive && this.setState({alive: false});\r\n        }\r\n    };\r\n\r\n    onResponse = (id, state) => {\r\n        if (this.state.toast === null) {\r\n            this.setState({toast: '', toastError: false});\r\n        } else\r\n        if (state) {\r\n            if (state.val && state.val.match(/^Error\\.|^Fehler\\.|^Ошибка\\./)) {\r\n                this.props.socket.getState('text2command.' + this.props.instance + '.error')\r\n                    .then(state =>\r\n                        this.setState({toast: state && state.val ? state.val : (state.val || ''), toastError: true}));\r\n            } else {\r\n                this.setState({toast: state.val || '', toastError: false});\r\n            }\r\n        }\r\n    };\r\n\r\n    handleTextCommand = event => {\r\n        this.setState({textCommand: event.target.value}, () => {\r\n            this.testTimer && clearTimeout(this.testTimer);\r\n            this.testTimer = setTimeout(() => {\r\n                const matched = this.findMatchingRules();\r\n                this.setState({\r\n                    matchingRules: matched.map((number, index) => ({\r\n                        indexOf: number,\r\n                        timer: index * 1500,\r\n                        index,\r\n                    })),\r\n                });\r\n            }, 500);\r\n        });\r\n    };\r\n\r\n    handleSubmit = (event, iconPlay) => {\r\n        if ((event && event.key === 'Enter') || iconPlay) {\r\n            this.props.socket.setState(`text2command.${this.props.instance}.text`, this.state.textCommand)\r\n                .catch(err => console.error(err));\r\n\r\n            if (!this.state.alive) {\r\n                this.setState({toast: I18n.t('Instance is not running'), toastError: true});\r\n            }\r\n        }\r\n    };\r\n\r\n    removeMatched = () => {\r\n        this.setState({matchingRules: []});\r\n    };\r\n\r\n    findMatchingRules() {\r\n        const text = this.state.textCommand;\r\n        return text ? window.findMatched(text, JSON.parse(JSON.stringify(this.props.rules))) : [];\r\n    }\r\n\r\n    handleOpenSettingsModal = () => {\r\n        this.setState({isSettingsDialogOpen: true});\r\n    };\r\n\r\n    handleDialogSelectIdSubmit = (selected, selectedSettingsName) => {\r\n        this.setState({\r\n            localSettings: {\r\n                ...this.state.localSettings,\r\n                [selectedSettingsName]: selected,\r\n            },\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.props.removeRule(this.props.selectedRule.id);\r\n        this.handleCloseConfirmRemoveDialog();\r\n    };\r\n\r\n    handleCloseConfirmRemoveDialog = () => {\r\n        this.setState({isConfirmRemoveDialogOpen: false});\r\n    };\r\n\r\n    handleSearch = event => {\r\n        const matchedRules = this.props.rules.filter(rule =>\r\n            rule.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n\r\n        this.setState({\r\n            filteredRules: matchedRules || [],\r\n            searchedValue: event.target.value,\r\n        });\r\n    };\r\n\r\n    toggleSearch = async () => {\r\n        await this.setState({isSearchActive: !this.state.isSearchActive});\r\n    };\r\n\r\n    createSettingsModal = () => {\r\n        if (!this.state.isSettingsDialogOpen) {\r\n            return null;\r\n        }\r\n\r\n        const { t } = I18n;\r\n        const options = ['en', 'de', 'ru'];\r\n        const { classes } = this.props;\r\n\r\n        const handleClose = () => {\r\n            this.setState({\r\n                isSettingsDialogOpen: false,\r\n                isSettingsWasNotSaved: true,\r\n            });\r\n        };\r\n\r\n        const submitSettings = () => this.props.saveSettings(this.state.localSettings, handleClose);\r\n\r\n        const handleChange = (event, name) => {\r\n            let value = event.target.checked !== undefined ? event.target.checked : event.target.value;\r\n            if (name === 'language' && value === 'system') {\r\n                value = '';\r\n            }\r\n\r\n            this.setState({\r\n                localSettings: {\r\n                    ...this.state.localSettings,\r\n                    [name]: value,\r\n                },\r\n            });\r\n        };\r\n\r\n        return <Dialog\r\n            open={this.state.isSettingsDialogOpen}\r\n            onClose={handleClose}\r\n            fullWidth\r\n            onExited={this.getDefaultSettings}>\r\n            <DialogTitle>\r\n                <Typography variant=\"h4\" component=\"span\" align=\"center\">\r\n                    {t('Settings')}\r\n                </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <FormControl fullWidth classes={{ root: classes.settingsItem }}>\r\n                            <InputLabel id=\"demo-simple-select-label\">{t('Language')}</InputLabel>\r\n                            <Select\r\n                                classes={{ root: classes.width100 }}\r\n                                onChange={event => handleChange(event, 'language')}\r\n                                value={\r\n                                    !this.state.localSettings.language\r\n                                        ? 'system'\r\n                                        : this.state.localSettings.language\r\n                                }>\r\n                                <MenuItem value=\"system\">{t('System')}</MenuItem>\r\n                                {Children.toArray(\r\n                                    options.map(option =>\r\n                                        <MenuItem value={option}>{t('lang_' + option)}</MenuItem>)\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl fullWidth classes={{ root: clsx(classes.settingsItem, classes.selectIdText) }}>\r\n                                <TextField\r\n                                    label={t('Answer in id')}\r\n                                    value={this.state.localSettings.sayitInstance}\r\n                                    onChange={event => handleChange(event, 'sayitInstance')}\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.selectIdButton}\r\n                                onClick={() =>\r\n                                    this.setState({\r\n                                        showDialogSelectId: true,\r\n                                        selectedSettingsName: 'sayitInstance',\r\n                                        selectedId: this.state.localSettings.sayitInstance || '',\r\n                                    })}\r\n                            >...</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl fullWidth classes={{ root: clsx(classes.settingsItem, classes.selectIdText) }}>\r\n                                <TextField\r\n                                    label={t(`Processor's id`)}\r\n                                    value={this.state.localSettings.processorId}\r\n                                    onChange={event => handleChange(event, 'processorId')}\r\n                                />\r\n                            </FormControl>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.selectIdButton}\r\n                                onClick={() =>\r\n                                    this.setState({\r\n                                        showDialogSelectId: true,\r\n                                        selectedSettingsName: 'processorId',\r\n                                        selectedId: this.state.localSettings.processorId || '',\r\n                                    })}\r\n                            >...</Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl fullWidth classes={{ root: classes.settingsItem }}>\r\n                            <TextField\r\n                                label={t('Timeout for processor')}\r\n                                helperText={t('ms')}\r\n                                value={this.state.localSettings.processorTimeout}\r\n                                onChange={e => handleChange(e, 'processorTimeout')}\r\n                            />\r\n                        </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl fullWidth classes={{ root: classes.settingsItem }}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={this.state.localSettings.writeEveryAnswer} onChange={e => handleChange(e, 'writeEveryAnswer')} />}\r\n                                    label={t('Write to response by every command')}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControl fullWidth classes={{ root: classes.settingsItem }}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={this.state.localSettings.noNegativeMessage} onChange={e => handleChange(e, 'noNegativeMessage')} />}\r\n                                    label={t('Do not answer \"I don\\'t understand\" if no rules found')}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={submitSettings} startIcon={<CheckIcon/>}>{I18n.t('Ok')}</Button>\r\n                <Button variant=\"contained\" onClick={handleClose}startIcon={<CloseIcon/>}>{I18n.t('Cancel')}</Button>\r\n            </DialogActions>\r\n        </Dialog>;\r\n    };\r\n\r\n    mainIcons = [\r\n        {\r\n            icon: <AddIcon />,\r\n            handler: () => this.props.handleOpen(true),\r\n            tooltip: I18n.t('Create rule'),\r\n        },\r\n        {\r\n            icon: <SettingsIcon />,\r\n            handler: () => this.handleOpenSettingsModal(),\r\n            tooltip: I18n.t('Settings'),\r\n        },\r\n        {\r\n            icon: <CachedIcon />,\r\n            handler: () => console.log('refresh'),\r\n            tooltip: I18n.t('Refresh'),\r\n        },\r\n    ];\r\n\r\n    createIcons = iconsData =>\r\n        iconsData.map(({ icon, handler, tooltip }, index) => <CustomTooltip title={tooltip} key={index}>\r\n            <IconButton onClick={handler}>{icon}</IconButton>\r\n        </CustomTooltip>);\r\n\r\n    renderSelectIdDialog() {\r\n        return this.state.showDialogSelectId ? (\r\n            <DialogSelectID\r\n                imagePrefix={'../..'}\r\n                socket={this.props.socket}\r\n                title={'Select ID'}\r\n                selected={this.state.selectedId}\r\n                onClose={() => this.setState({ showDialogSelectId: false })}\r\n                onOk={selected => this.handleDialogSelectIdSubmit(selected, this.state.selectedSettingsName)}\r\n            />\r\n        ) : null;\r\n    }\r\n\r\n    renderConfirmDialog() {\r\n        return this.state.isConfirmRemoveDialogOpen ?\r\n            <Dialog\r\n                open={this.state.isConfirmRemoveDialogOpen}\r\n                onClose={this.handleCloseConfirmRemoveDialog}\r\n                fullWidth>\r\n                <DialogTitle>{I18n.t('Are you sure?')}</DialogTitle>\r\n                <DialogContent>\r\n                    <Typography component=\"p\">\r\n                        {I18n.t('You want to delete: %s', this.props.selectedRule.name)}\r\n                    </Typography>\r\n                    <DialogActions>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            autoFocus\r\n                            onClick={this.handleDelete}\r\n                            startIcon={<DeleteIcon/>}\r\n                        >{I18n.t('Delete')}</Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={this.handleCloseConfirmRemoveDialog}\r\n                                startIcon={<CloseIcon/>}\r\n                                >\r\n                            {I18n.t('Cancel')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n         : null;\r\n    }\r\n\r\n    renderToast() {\r\n        if (this.state.toast) {\r\n            return <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={true}\r\n                autoHideDuration={4000}\r\n                onClose={() => this.setState({toast: ''})}\r\n            >\r\n                {\r\n                    this.state.toastError ?\r\n                        <Alert elevation={6} variant=\"filled\" onClose={() => this.setState({toast: ''})} severity=\"error\">{this.state.toast}</Alert>\r\n                        :\r\n                        <Alert elevation={6} variant=\"filled\" onClose={() => this.setState({toast: ''})} severity=\"success\">{this.state.toast}</Alert>\r\n                }\r\n            </Snackbar>\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            selectedRule,\r\n            moveRule,\r\n            handleEdit,\r\n            handleCopy,\r\n            rules,\r\n            selectRule,\r\n            classes,\r\n            isMobile,\r\n            closeDrawer,\r\n        } = this.props;\r\n\r\n        const { filteredRules, isSearchActive, searchedValue } = this.state;\r\n        const settingsDialog = this.createSettingsModal();\r\n        const renderedRules = isSearchActive && searchedValue.length ? filteredRules : rules;\r\n        const additionalIcons = [];\r\n\r\n        selectedRule &&\r\n            selectedRule.id &&\r\n            additionalIcons.push({\r\n                icon: !isSearchActive && <DeleteIcon />,\r\n                handler: () =>\r\n                    this.setState({isConfirmRemoveDialogOpen: true,}),\r\n                tooltip: I18n.t('Remove rule'),\r\n                key: 'delete',\r\n            });\r\n\r\n        rules.length &&\r\n            additionalIcons.push({\r\n                icon: isSearchActive ? <FormatClearIcon /> : <SearchIcon />,\r\n                handler: () => this.toggleSearch(),\r\n                tooltip: I18n.t('Search rule'),\r\n                key: 'search',\r\n            });\r\n\r\n        return <Box className={classes.main}>\r\n            <Toolbar position=\"static\" variant=\"dense\" classes={{ root: classes.toolbar }} disableGutters>\r\n                {isSearchActive ?\r\n                    <TextField\r\n                        className={classes.search}\r\n                        onChange={this.handleSearch}\r\n                        value={this.state.searchedValue}\r\n                        InputProps={{\r\n                            endAdornment: this.state.searchedValue ? (\r\n                                <IconButton\r\n                                    onClick={() => this.setState({ searchedValue: '' })}>\r\n                                    <ClearIcon />\r\n                                </IconButton>\r\n                            ) : undefined,\r\n                        }}\r\n                        autoFocus\r\n                    />\r\n                 : <div>{this.createIcons(this.mainIcons)}</div>}\r\n                <div>{this.createIcons(additionalIcons)}</div>\r\n                {isMobile && (\r\n                    <IconButton className={classes.closeBtn} onClick={closeDrawer}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n                {!isSearchActive && !this.state.alive ? <div style={{flexGrow: 1}}/> : null}\r\n                {!isSearchActive && !this.state.alive ? <Tooltip title={I18n.t('Instance is not running')}><WarningIcon className={classes.iconNotAlive}/></Tooltip> : null}\r\n            </Toolbar>\r\n\r\n            <DndProvider backend={isTouchDevice() ? TouchBackend : HTML5Backend}>\r\n                <List className={classes.list}>\r\n                    {renderedRules.map((rule, index) => (\r\n                        <Rule\r\n                            theme={this.props.theme}\r\n                            handleEdit={handleEdit}\r\n                            handleCopy={handleCopy}\r\n                            unique={rule.unique}\r\n                            {...rule}\r\n                            index={index}\r\n                            moveRule={moveRule}\r\n                            key={rule.id}\r\n                            selectRule={selectRule}\r\n                            selectedRule={selectedRule}\r\n                            matchingRules={this.state.matchingRules}\r\n                            unsavedRules={this.props.unsavedRules}\r\n                            removeMatched={this.removeMatched}\r\n                        />\r\n                    ))}\r\n                </List>\r\n            </DndProvider>\r\n\r\n            <Toolbar className={classes.test} variant=\"dense\" disableGutters>\r\n                <TextField\r\n                    onChange={this.handleTextCommand}\r\n                    label={I18n.t('Test phrase')}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    className={clsx('outlined-basic', classes.root)}\r\n                    onKeyDown={this.handleSubmit}\r\n                    value={this.state.textCommand}\r\n                    inputProps={{style: {padding: '10px 10px'}}}\r\n                    InputProps={{\r\n                        endAdornment: this.state.textCommand ? (\r\n                            <IconButton onClick={() => this.setState({ textCommand: '' })}>\r\n                                <ClearIcon />\r\n                            </IconButton>\r\n                        ) : undefined,\r\n                    }}\r\n                />\r\n                <IconButton\r\n                    variant=\"outlined\"\r\n                    onClick={event => this.handleSubmit(event, true)}>\r\n                    <PlayArrowIcon className={classes.play} />\r\n                </IconButton>\r\n            </Toolbar>\r\n\r\n            {settingsDialog}\r\n\r\n            {this.renderConfirmDialog()}\r\n            {this.renderSelectIdDialog()}\r\n            {this.renderToast()}\r\n        </Box>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Drawer);\r\n\r\nDrawer.propTypes = {\r\n    handleOpen: PropTypes.func.isRequired,\r\n    themeType: PropTypes.string,\r\n    rules: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n        })\r\n    ),\r\n    instance: PropTypes.number.isRequired,\r\n    moveRule: PropTypes.func.isRequired,\r\n    selectRule: PropTypes.func.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    selectedRule: PropTypes.shape({id: PropTypes.string}),\r\n    removeRule: PropTypes.func,\r\n    handleEdit: PropTypes.func.isRequired,\r\n    handleCopy: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    settings: PropTypes.object,\r\n    socket: PropTypes.object.isRequired,\r\n    saveSettings: PropTypes.func.isRequired,\r\n    unsavedRules: PropTypes.object,\r\n    toggleLeftBar: PropTypes.func,\r\n    isMobile: PropTypes.bool.isRequired,\r\n    closeDrawer: PropTypes.func,\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport {TextField, Switch, Typography, withStyles, Box, FormLabel} from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport DialogSelectID from '@iobroker/adapter-react/Dialogs/SelectID';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        padding: 0,\r\n        margin: 0,\r\n        position: 'relative',\r\n    },\r\n    box: {\r\n        display: 'inline-flex',\r\n        justifyContent: 'space-around',\r\n        position: 'relative',\r\n        '& .outlined-basic': {\r\n            padding: '12px 10px',\r\n            //border: `2px solid ${theme.palette.grey[700]}`,\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            '& .outlined-basic': {\r\n                padding: 0,\r\n            },\r\n        },\r\n    },\r\n    boxMobile: {\r\n        padding: 0,\r\n        width: '100%',\r\n        height: 'calc(100% - 48px - 48px)',\r\n        overflow: 'auto'\r\n    },\r\n    boxDesktop: {\r\n        padding: theme.spacing(1),\r\n        width: 'calc(100% - ' + theme.spacing(2) + 'px)',\r\n        height: 'calc(100% - 48px - 48px - ' + theme.spacing(2) + 'px)',\r\n        overflow: 'auto'\r\n    },\r\n    container: {\r\n        width: '100%',\r\n        padding: theme.spacing(2),\r\n        overflow: 'auto',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: 'calc(100% - ' + theme.spacing(3) + 'px)',\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n    /*textField: {\r\n        flexBasis: '60%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n            marginTop: theme.spacing(1),\r\n        },\r\n    },*/\r\n    submitForm: {\r\n        flexDirection: 'row',\r\n        //margin: '10px auto 20px',\r\n        display: 'flex',\r\n        justifyContent: 'right',\r\n        width: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    mainTitle: {\r\n        marginBottom: '30px',\r\n    },\r\n    rowSpace: {\r\n        marginBottom: 16,\r\n    },\r\n    title: {\r\n        whiteSpace: 'nowrap'\r\n    },\r\n    row: {\r\n        [theme.breakpoints.down('md')]: {\r\n            alignItems: 'center',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column',\r\n            alignItems: 'flex-start',\r\n            textAlign: 'center',\r\n        },\r\n    },\r\n    btnDanger: {\r\n        marginLeft: 8,\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: 0,\r\n            marginTop: theme.spacing(0.5),\r\n        },\r\n        //backgroundColor: theme.palette.error?.dark,\r\n    },\r\n    saveAndGoBtn: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginRight: 0,\r\n            marginBottom: theme.spacing(0.5),\r\n        },\r\n    },\r\n    toggleIcon: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        opacity: 0.8,\r\n        top: 8,\r\n        left: 0,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: 18,\r\n        height: 25,\r\n        cursor: 'pointer',\r\n        padding: '4px 8px 4px 2px',\r\n        color: '#FFF',\r\n        borderRadius: '0 5px 5px 0',\r\n    },\r\n    switchControl: {\r\n        //paddingTop: theme.spacing(1),\r\n        //flexBasis: '60%',\r\n        marginTop: -5,\r\n    },\r\n    emptyButtons: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            height: 0,\r\n        },\r\n    },\r\n    noRulesText: {\r\n        fontSize: 24,\r\n        color: theme.palette.primary.light\r\n    },\r\n    header: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        paddingLeft: 40,\r\n        zIndex: 0,\r\n        color: '#FFF',\r\n    },\r\n    inputOid: {\r\n        width: 'calc(100% - 60px)',\r\n        display: 'inline-block'\r\n    },\r\n    inputOidButton: {\r\n        minWidth: 40,\r\n        display: 'inline-block',\r\n        marginLeft: 8\r\n    },\r\n    textField: {\r\n        width: 'calc(100% - 12px)',\r\n    },\r\n    rowPadding: {\r\n        marginBottom: theme.spacing(1),\r\n    }\r\n});\r\n\r\nclass RuleEditor extends PureComponent {\r\n    defaultState = {\r\n        words: I18n.t('Create Rule'),\r\n        name: I18n.t('Create Rule'),\r\n        _break: false,\r\n        editable: false,\r\n        args: [\r\n            {\r\n                default: I18n.t('Argument') + ' 1',\r\n            },\r\n            {\r\n                default: I18n.t('Argument') + ' 2',\r\n            },\r\n        ],\r\n        ack: {\r\n            name: '',\r\n            default: `${I18n.t('Confirmation text')}`,\r\n        },\r\n        id: 0,\r\n    };\r\n\r\n    state = {\r\n        localRule: null,\r\n        showDialog: false,\r\n        editIndex: 0,\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if ((!props.selectedRule && state.localRule) ||\r\n            (props.selectedRule && !state.localRule) ||\r\n            (props.selectedRule?.id !== state.localRule?.id)) {\r\n            return {\r\n                localRule: {...props.selectedRule}\r\n            };\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            prevProps.selectedRule?.name !== this.props.selectedRule?.name ||\r\n            prevState.localRule?.name !== this.state.localRule?.name\r\n        ) {\r\n            if (!this.props.selectedRule || !this.props.selectedRule.name) {\r\n                this.setState({\r\n                    localRule: null,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    localRule: {\r\n                        ...this.props.selectedRule,\r\n                    },\r\n                });\r\n            }\r\n        } else if (this.state.isLocalStateWasUpdated) {\r\n            const unsavedRule = this.props.unsavedRules[this.state.localRule.id];\r\n\r\n            if (\r\n                isEqual(this.props.selectedRule, this.state.localRule) &&\r\n                !unsavedRule?.wasChangedGlobally\r\n            ) {\r\n                this.setState({isLocalStateWasUpdated: false});\r\n\r\n                if (!unsavedRule?.wasChangedGlobally) {\r\n                    this.props.removeUnsavedRule(this.state.localRule.id);\r\n                }\r\n            } else if (!unsavedRule && !this.props.pendingSelectedRuleId) {\r\n                this.props.setUnsavedRule(this.state.localRule.id);\r\n            }\r\n        } else if (\r\n            !this.state.isLocalStateWasUpdated &&\r\n            this.props.unsavedRules[this.state.localRule.id]\r\n        ) {\r\n            this.setState({isLocalStateWasUpdated: true});\r\n        }\r\n\r\n        if (this.props.pendingSelectedRuleId && this.state.isLocalStateWasUpdated) {\r\n            if (this.props.pendingSelectedRuleId === this.state.localRule.id) {\r\n                return;\r\n            }\r\n            this.setState({confirmChanges: true});\r\n        }\r\n\r\n        if (this.props.lang !== prevProps.lang) {\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.localRule && this.props.selectedRule) {\r\n            this.setState({\r\n                localRule: this.props.selectedRule,\r\n            });\r\n        }\r\n    }\r\n\r\n    createConfirmModalActions = () => {\r\n        const { t } = I18n;\r\n        const {\r\n            updateConfig,\r\n            classes,\r\n            selectRule,\r\n            pendingSelectedRuleId,\r\n            clearStateOnConfirmModalUnmount,\r\n            revertChangesFromConfig,\r\n        } = this.props;\r\n        const { localRule } = this.state;\r\n\r\n        const cancelSavingChanges = async () => {\r\n            await clearStateOnConfirmModalUnmount();\r\n            this.closeConfirmDialog();\r\n        };\r\n\r\n        const dontSaveAndGo = async () => {\r\n            await revertChangesFromConfig(localRule);\r\n            await selectRule(pendingSelectedRuleId);\r\n            await clearStateOnConfirmModalUnmount(localRule.id);\r\n\r\n            this.closeConfirmDialog();\r\n        };\r\n        const handleSaveAndGo = async () => {\r\n            await updateConfig(localRule);\r\n            await selectRule(pendingSelectedRuleId);\r\n            await clearStateOnConfirmModalUnmount();\r\n\r\n            this.closeConfirmDialog();\r\n        };\r\n        return <FormControl className={classes.submitForm}>\r\n            <div style={{flexGrow: 1}}/>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={handleSaveAndGo}\r\n                color=\"primary\"\r\n                startIcon={<CheckIcon/>}\r\n                className={classes.saveAndGoBtn}>\r\n                {t('Save and go')}\r\n            </Button>\r\n            <Button onClick={dontSaveAndGo} variant=\"contained\" color=\"secondary\"\r\n                    startIcon={<CheckIcon/>}\r\n            >\r\n                {t(`Don't save and go`)}\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                className={classes.btnDanger}\r\n                startIcon={<CloseIcon/>}\r\n                onClick={cancelSavingChanges}>\r\n                {t('Cancel')}\r\n            </Button>\r\n        </FormControl>;\r\n    };\r\n\r\n    createSaveSettingsForm = () => {\r\n        const { t } = I18n;\r\n        const { updateConfig, classes, revertChangesFromConfig, selectedRule } = this.props;\r\n        const { localRule } = this.state;\r\n\r\n        const handleSave = async () => {\r\n            await updateConfig(localRule);\r\n            this.setState({isLocalStateWasUpdated: false});\r\n        };\r\n\r\n        const revertChanges = async () => {\r\n            await revertChangesFromConfig(localRule);\r\n\r\n            await this.setState({\r\n                localRule: selectedRule,\r\n                isLocalStateWasUpdated: false,\r\n            });\r\n        };\r\n\r\n        if (!this.state.isLocalStateWasUpdated) {\r\n            return <div className={this.props.classes.emptyButtons} />;\r\n        } else {\r\n            return <FormControl className={classes.submitForm}>\r\n                <div style={{flexGrow: 1}}/>\r\n                <Button\r\n                    onClick={handleSave}\r\n                    variant=\"contained\"\r\n                    startIcon={<CheckIcon/>}\r\n                    color=\"primary\">\r\n                    {t('Save')}\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.btnDanger}\r\n                    startIcon={<CloseIcon/>}\r\n                    onClick={revertChanges}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </FormControl>;\r\n        }\r\n    };\r\n\r\n    closeConfirmDialog = () => {\r\n        this.setState({\r\n            isLocalStateWasUpdated: false,\r\n            confirmChanges: false,\r\n        });\r\n    };\r\n\r\n    createInput = ({\r\n        value,\r\n        label,\r\n        onChange,\r\n        type,\r\n        onOpenSelectDialog,\r\n        note,\r\n        disabled = !this.state.localRule,\r\n        keywords,\r\n        key,\r\n        onSwitchChange,\r\n        isMobile,\r\n    }) => {\r\n        if ((value === undefined || value === null) && !label && !keywords) {\r\n            return null;\r\n        }\r\n        const { classes } = this.props;\r\n\r\n        if (onOpenSelectDialog) {\r\n            return <div>\r\n                <TextField\r\n                    classes={{root: classes.inputOid}}\r\n                    fullWidth\r\n                    label={isMobile ? label : ''}\r\n                    //variant=\"outlined\"\r\n                    size=\"small\"\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    helperText={note || ''}\r\n                    onChange={onChange}\r\n                    key={key}\r\n                />\r\n                <Button\r\n                    onClick={() => onOpenSelectDialog(value)}\r\n                    size=\"small\"\r\n                    className={classes.inputOidButton}\r\n                    variant=\"outlined\"\r\n                >...</Button>\r\n            </div>\r\n        } else if (type !== 'checkbox') {\r\n            return <TextField\r\n                classes={{root: classes.textField}}\r\n                label={isMobile ? label : ''}\r\n                //variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={disabled}\r\n                value={value}\r\n                helperText={note || ''}\r\n                onChange={onChange}\r\n                key={key}\r\n                className={classes.rowPadding}\r\n                type={type === 'number' ? 'number' : 'text'}\r\n                //className={clsx('outlined-basic', classes.textField)}\r\n            />;\r\n        } else {\r\n            return <FormControl classes={{ root: classes.switchControl }}>\r\n                <Switch\r\n                    key={key}\r\n                    onClick={onSwitchChange}\r\n                    color={'primary'}\r\n                    disabled={disabled}\r\n                    checked={!!value}\r\n                />\r\n                {isMobile ? <FormLabel>{label}</FormLabel> : null}\r\n            </FormControl>;\r\n        }\r\n    };\r\n\r\n    createOptionsData = (state = this.state) => {\r\n        const {localRule: { args, ack, editable, _break }} = state;\r\n        const { t } = I18n;\r\n\r\n        const createInput = this.createInput;\r\n        const handlers = this.handlers;\r\n\r\n        const isKeyWordsDisabled = () => {\r\n            if (editable === undefined) {\r\n                return false;\r\n            } else if (editable === false) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        return [\r\n            {\r\n                title: t('Keywords'),\r\n                item: createInput({\r\n                    value: this.state.localRule?.words || '',\r\n                    onChange: handlers.keywordsText,\r\n                    keywords: true,\r\n                    disabled: isKeyWordsDisabled(),\r\n                    key: 'keywords',\r\n                    label: t('Keywords'),\r\n                    isMobile: this.props.isMobile,\r\n                }),\r\n                id: 1,\r\n            },\r\n            {\r\n                title: t('Interrupt processing'),\r\n                item: createInput({\r\n                    type: 'checkbox',\r\n                    value: _break,\r\n                    onSwitchChange: handlers.breakOnSwitch,\r\n                    key: 'break',\r\n                    label: t('Interrupt processing'),\r\n                    isMobile: this.props.isMobile,\r\n                }),\r\n                id: 2,\r\n            },\r\n            {\r\n                title: args && args[0]?.name, //`${t('Argument')}:`,\r\n                item: createInput({\r\n                    value: args && this.state.localRule.args[0]?.default,\r\n                    type: args && args[0]?.type,\r\n                    onOpenSelectDialog: selectedId => this.openSelectIdDialog(args && args[0], selectedId, 0),\r\n                    onSwitchChange: handlers.param1OnSwitch,\r\n                    key: 'Param1',\r\n                    label: args && args[0]?.name, //`${t('Argument')}:`,\r\n                    isMobile: this.props.isMobile,\r\n                }),\r\n                id: 3,\r\n            },\r\n            {\r\n                title: args && args[1]?.name, //`${t('Argument')}:`,\r\n                item: createInput({\r\n                    value: args && this.state.localRule.args[1]?.default,\r\n                    type: args && args[1]?.type,\r\n                    onChange: handlers.param2Text,\r\n                    onSwitchChange: handlers.param2OnSwitch,\r\n                    key: 'Param2',\r\n                    label: args && args[1]?.name, //`${t('Argument')}:`,\r\n                    isMobile: this.props.isMobile,\r\n                }),\r\n                id: 4,\r\n            },\r\n            {\r\n                title: args && args[2]?.name, //`${t('Argument')}:`,\r\n                item: createInput({\r\n                    value: args && this.state.localRule.args[2]?.default,\r\n                    type: args && args[2]?.type,\r\n                    onOpenSelectDialog: selectedId => this.openSelectIdDialog(args && args[2], selectedId, 2),\r\n                    onSwitchChange: handlers.param3OnSwitch,\r\n                    key: 'Param3',\r\n                    label: args && args[2]?.name, //`${t('Argument')}:`,\r\n                    isMobile: this.props.isMobile,\r\n                }),\r\n                id: 5,\r\n            },\r\n            {\r\n                title: t('Confirmation text'),\r\n                item: createInput({\r\n                    value: ack && ack.default,\r\n                    //label: ack && ack.name,\r\n                    note: t('You can use %s, that will be replaced with current value of state. %u will be replaced by unit'),\r\n                    type: ack && ack.type,\r\n                    key: 'confirmationText',\r\n                    onChange: handlers.confirmText,\r\n                    onSwitchChange: handlers.confirmOnSwitch,\r\n                    label: t('Confirmation text'),\r\n                    isMobile: this.props.isMobile,\r\n                }),\r\n                id: 6,\r\n            },\r\n        ];\r\n    };\r\n\r\n    createInputHandlers = () => {\r\n        const _this = this;\r\n\r\n        return {\r\n            keywordsText(event) {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        words: event.target.value,\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            param2Text(event) {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        args: _this.state.localRule.args.map((arg, index) =>\r\n                            index > 0\r\n                                ? {\r\n                                      ...arg,\r\n                                      default: event.target.value,\r\n                                  }\r\n                                : arg\r\n                        ),\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            confirmText(event) {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        ack: {\r\n                            ..._this.state.localRule.ack,\r\n                            default: event.target.value,\r\n                        },\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            param1OnSwitch() {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        args: _this.state.localRule.args.map((arg, index) =>\r\n                            index === 0 ? { ...arg, default: !arg.default ? true : !arg.default } : arg\r\n                        ),\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            param2OnSwitch() {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        args: _this.state.localRule.args.map((arg, index) =>\r\n                            index === 1 ? { ...arg, default: !arg.default ? true : !arg.default } : arg\r\n                        ),\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            param3OnSwitch() {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        args: _this.state.localRule.args.map((arg, index) =>\r\n                            index === 2 ? { ...arg, default: !arg.default ? true : !arg.default } : arg\r\n                        ),\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            confirmOnSwitch() {\r\n                _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        ack: {\r\n                            ..._this.state.localRule.ack,\r\n                            default: !_this.state.localRule.ack.default,\r\n                        },\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n            async breakOnSwitch() {\r\n                await _this.setState({\r\n                    localRule: {\r\n                        ..._this.state.localRule,\r\n                        _break: !_this.state.localRule._break,\r\n                    },\r\n                    isLocalStateWasUpdated: true,\r\n                });\r\n            },\r\n        };\r\n    };\r\n\r\n    handlers = this.createInputHandlers();\r\n\r\n    openSelectIdDialog = (arg, selectedId, editIndex) => {\r\n        if (arg.type === 'id') {\r\n            this.setState({showDialog: true, showDialogId: selectedId, editIndex});\r\n        }\r\n    };\r\n\r\n    onIDSelected = selected => {\r\n        this.setState({\r\n            localRule: {\r\n                ...this.state.localRule,\r\n                args: this.state.localRule.args.map((arg, index) =>\r\n                    index === this.state.editIndex\r\n                        ? {\r\n                              ...arg,\r\n                              default: selected,\r\n                          }\r\n                        : arg\r\n                ),\r\n            },\r\n            isLocalStateWasUpdated: true,\r\n            editIndex: 0\r\n        });\r\n    };\r\n\r\n    renderConfirmDialog() {\r\n        return this.state.confirmChanges ? (\r\n            <Dialog fullWidth open={this.state.confirmChanges} maxWidth={'md'}>\r\n                <DialogTitle>\r\n                    {I18n.t('Please confirm or cancel changes before leaving')}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography>\r\n                        {I18n.t('You have changed rule') + ': '}{' '}\r\n                        <strong>{this.state.localRule.name}</strong>\r\n                    </Typography>\r\n                    <DialogActions>{this.createConfirmModalActions()}</DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n        ) : null;\r\n    }\r\n\r\n    renderSelectIdDialog() {\r\n        return this.state.showDialog ?\r\n            <DialogSelectID\r\n                imagePrefix={'../..'}\r\n                socket={this.props.socket}\r\n                title={'Select ID'}\r\n                selected={this.state.showDialogId}\r\n                onClose={() => this.setState({ showDialog: false})}\r\n                onOk={id => this.onIDSelected(id)}\r\n            />: null;\r\n    }\r\n\r\n    render() {\r\n        const {localRule} = this.state;\r\n\r\n        const { classes, isLeftBarOpen, toggleLeftBar } = this.props;\r\n        const name = localRule ? localRule.name : '';\r\n\r\n        if (!this.props.selectedRule) {\r\n            return null;\r\n        }\r\n\r\n        return <div className={classes.root}>\r\n            <Box className={classes.toggleIcon} onClick={toggleLeftBar}>\r\n                {isLeftBarOpen || this.props.isMobile ? <MenuIcon /> : <ArrowBackIcon />}\r\n            </Box>\r\n            <Toolbar position=\"static\" variant=\"dense\" className={this.props.classes.header}>\r\n                {name}\r\n            </Toolbar>\r\n\r\n            <Box className={clsx(classes.box, this.props.isMobile ? classes.boxMobile : classes.boxDesktop)} key={this.props.selectedRule ? this.props.selectedRule.id : 'emptyLeft'}>\r\n                {localRule ?\r\n                    <Paper className={classes.container}>\r\n                        <div style={this.props.isMobile ? {width: '100%'} : {display: 'grid', gridTemplateColumns: 'minmax(50px, 265px) 1fr'}}>\r\n                            {this.createOptionsData().map(({title, item, id}) => {\r\n                                if (!item) {\r\n                                    return null;\r\n                                }\r\n\r\n                                return [\r\n                                    !this.props.isMobile ?<div key={1} className={clsx(classes.title, classes.rowSpace)}>{title}</div> : null,\r\n                                    <div key={2} className={classes.rowSpace}>{item}</div>\r\n                                ];\r\n                            })}\r\n                        </div>\r\n                    </Paper>\r\n                    :\r\n                    null\r\n                }\r\n\r\n                {this.renderSelectIdDialog()}\r\n                {this.renderConfirmDialog()}\r\n            </Box>\r\n\r\n            {localRule ? <Toolbar position=\"static\" variant=\"dense\" className={this.props.classes.header}>\r\n                {this.createSaveSettingsForm()}\r\n            </Toolbar> : null}\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(RuleEditor);\r\n\r\nRuleEditor.propTypes = {\r\n    selectedRule: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        id: PropTypes.string,\r\n        rule: PropTypes.string,\r\n        ack: PropTypes.shape({\r\n            default: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n        }),\r\n        arg: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                name: PropTypes.string,\r\n                type: PropTypes.string,\r\n                default: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\r\n            })\r\n        ),\r\n        words: PropTypes.string,\r\n    }).isRequired,\r\n    socket: PropTypes.object.isRequired,\r\n    updateConfig: PropTypes.func.isRequired,\r\n    revertChangesFromConfig: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    selectRule: PropTypes.func.isRequired,\r\n    pendingSelectedRuleId: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    clearStateOnConfirmModalUnmount: PropTypes.func.isRequired,\r\n    unsavedRules: PropTypes.object.isRequired,\r\n    setUnsavedRule: PropTypes.func.isRequired,\r\n    removeUnsavedRule: PropTypes.func.isRequired,\r\n    toggleLeftBar: PropTypes.func.isRequired,\r\n    isLeftBarOpen: PropTypes.bool,\r\n    isMobile: PropTypes.bool.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { DialogActions, Button, Select, TextField, MenuItem, withStyles } from '@material-ui/core';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nconst styles = theme => ({\r\n    select: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2.5),\r\n    },\r\n    TextField: {\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n});\r\n\r\nclass CreateRuleDialog extends Component {\r\n    defaultRule = {\r\n        rule: I18n.t('Select rule'),\r\n        name: I18n.t('New rule'),\r\n        id: '',\r\n    };\r\n\r\n    state = {\r\n        localRule: this.defaultRule,\r\n        isDisabled: true,\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.cleanState();\r\n    }\r\n\r\n    setRuleOnMount = () => {\r\n        const { isEdit, selectedRule } = this.props;\r\n        if (isEdit) {\r\n            this.setState({\r\n                localRule: selectedRule,\r\n            });\r\n        }\r\n    };\r\n\r\n    cleanState = () => {\r\n        if (this.props.isEdit && !this.props.isCopy) {\r\n            this.props.finishEdit(this.state.localRule);\r\n        }\r\n        this.setState({localRule: this.defaultRule});\r\n    };\r\n\r\n    getAvailableOptions = () => {\r\n        const { commands, rules, selectedRule, isEdit } = this.props;\r\n\r\n        const uniqueOptions = commands?.filter(\r\n            option => !(option.unique && rules.find(item => item?.rule === option.rule))\r\n        );\r\n\r\n        return selectedRule?.unique && isEdit ? uniqueOptions.concat(selectedRule) : uniqueOptions;\r\n    };\r\n\r\n    getUniqueName = ruleName => {\r\n        const existingNames = this.props.rules?.map(rule => rule?.name);\r\n\r\n        const matchingNames = existingNames.filter(\r\n            name => name.slice(0, name.length - 2) === ruleName\r\n        );\r\n        const isUnique = this.props.commands.find(\r\n            ({ rule, unique }) => rule === ruleName && unique\r\n        );\r\n\r\n        if (matchingNames.length) {\r\n            let name = matchingNames[matchingNames.length - 1];\r\n            let lastChar = name.slice(name.length - 1);\r\n\r\n            return name.slice(0, name.length - 1) + ++lastChar;\r\n        }\r\n\r\n        return isUnique ? ruleName : `${ruleName} 1`;\r\n    };\r\n\r\n    createForm = disabled => {\r\n        const { localRule } = this.state;\r\n        const { classes } = this.props;\r\n        const commands = this.getAvailableOptions();\r\n        const onSubmitHandler = !this.props.isEdit ? this.props.handleSubmitOnCreate : (this.props.isCopy ? this.props.handleSubmitOnCopy : this.props.handleSubmitOnEdit);\r\n\r\n        const handleSelectChange = event =>\r\n            this.setState({\r\n                localRule: {\r\n                    ...localRule,\r\n                    rule: event.target.value,\r\n                    name: this.getUniqueName(event.target.value),\r\n                    isError: '',\r\n                },\r\n            });\r\n\r\n        const handleInputChange = event => {\r\n            const existingNames = this.props.rules?.map(rule => rule?.name);\r\n\r\n            this.setState({\r\n                localRule: {\r\n                    ...localRule,\r\n                    name: event.target.value,\r\n                    isError: existingNames.includes(event.target.value)\r\n                        ? `${I18n.t('Name already exist')}`\r\n                        : '',\r\n                },\r\n            });\r\n        };\r\n\r\n        return <FormGroup>\r\n            {!this.props.isCopy ? <FormControl fullWidth>\r\n                <InputLabel shrink id=\"rule\">\r\n                    {I18n.t('Rule')}\r\n                </InputLabel>\r\n                <Select\r\n                    onChange={handleSelectChange}\r\n                    value={localRule.rule}\r\n                    labelId={'rule'}\r\n                    className={classes.select}>\r\n                    {commands?.map(option =>\r\n                        <MenuItem key={option.rule} value={option.rule}>\r\n                            {option.rule}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl> : null}\r\n            <TextField\r\n                fullWidth\r\n                autoFocus\r\n                id=\"standard-basic\"\r\n                label={this.state.localRule.isError || I18n.t('Name')}\r\n                value={localRule.name}\r\n                onKeyDown={e => {\r\n                    if (e.keyCode === 13 && !disabled) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        onSubmitHandler(\r\n                            this.state.localRule,\r\n                            this.state.localRule.isError\r\n                        );\r\n                    }\r\n                }}\r\n                onChange={handleInputChange}\r\n                error={!!this.state.localRule.isError}\r\n                className={classes.TextField}/>\r\n        </FormGroup>;\r\n    };\r\n\r\n    setDialogContent = () => {\r\n        const { handleClose, handleSubmitOnCreate, handleSubmitOnEdit, isEdit, isCopy, handleSubmitOnCopy } = this.props;\r\n        const onSubmitHandler = !isEdit ? handleSubmitOnCreate : (isCopy ? handleSubmitOnCopy : handleSubmitOnEdit);\r\n        const disabled = !this.state.localRule.name || !this.state.localRule.rule || (this.state.localRule.name === this.defaultRule.name && this.state.localRule.rule === this.defaultRule.rule) ||\r\n        (this.state.localRule.name === this.props.selectedRule?.name && this.state.localRule.rule === this.props.selectedRule?.rule);\r\n        return <DialogContent>\r\n            {this.createForm(disabled, onSubmitHandler)}\r\n            <DialogActions>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => onSubmitHandler(\r\n                        this.state.localRule,\r\n                        this.state.localRule.isError\r\n                    )}\r\n                    startIcon={<CheckIcon/>}\r\n                    disabled={disabled}>\r\n                    { I18n.t('Ok') }\r\n                </Button>\r\n                <Button variant=\"contained\" onClick={handleClose} startIcon={<CloseIcon/>}>{I18n.t('Cancel')}</Button>\r\n            </DialogActions>\r\n        </DialogContent>;\r\n    };\r\n\r\n    render() {\r\n        return <Dialog\r\n            open={this.props.isOpen}\r\n            onClose={this.props.handleClose}\r\n            onExited={this.cleanState}\r\n            onEnter={this.setRuleOnMount}\r\n            fullWidth>\r\n            <DialogTitle>\r\n                {I18n.t(!this.props.isEdit ? 'Create new rule' : (this.props.isCopy ? 'Clone rule' : 'Edit rule'))}\r\n            </DialogTitle>\r\n            {this.setDialogContent()}\r\n        </Dialog>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CreateRuleDialog);\r\n\r\nCreateRuleDialog.propTypes = {\r\n    handleClose: PropTypes.func.isRequired,\r\n    handleSubmitOnCreate: PropTypes.func.isRequired,\r\n    handleSubmitOnEdit: PropTypes.func.isRequired,\r\n    handleSubmitOnCopy: PropTypes.func.isRequired,\r\n    isEdit: PropTypes.bool.isRequired,\r\n    commands: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            rule: PropTypes.string.isRequired,\r\n            unique: PropTypes.bool.isRequired,\r\n        }).isRequired\r\n    ),\r\n    isOpen: PropTypes.bool.isRequired,\r\n    selectedRule: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        rule: PropTypes.string.isRequired,\r\n        unique: PropTypes.bool,\r\n    }),\r\n    rules: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            rule: PropTypes.string.isRequired,\r\n            unique: PropTypes.bool,\r\n        })\r\n    ).isRequired,\r\n    finishEdit: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport 'react-splitter-layout/lib/index.css';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\n\r\nimport DrawerComponent from './Drawer';\r\nimport RuleEditor from './RuleEditor';\r\nimport CreateRuleDialog from './CreateRuleDialog';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nconst styles = theme => ({\r\n    layout: {\r\n        '& .layout-pane:first': {\r\n            overflow: 'hidden',\r\n        },\r\n    },\r\n    hidden: {\r\n        '& .layout-pane:first-child': {\r\n            width: '0 !important',\r\n        },\r\n        background: theme.palette.background.default,\r\n    },\r\n    opened: {\r\n        '& .layout-pane-primary': {\r\n            width: '',\r\n        },\r\n        overflow: 'hidden',\r\n        background: theme.palette.background.default,\r\n    },\r\n    noRulesText: {\r\n        fontSize: 24,\r\n        color: theme.palette.primary.light,\r\n        textAlign: 'center',\r\n        paddingTop: theme.spacing(2),\r\n    },\r\n});\r\n\r\nclass Layout extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.menuSize = parseFloat(window.localStorage.getItem('App.menuSize')) || 350;\r\n        this.state = {\r\n            rules: [],\r\n            isOpen: false,\r\n            isEdit: false,\r\n            isCopy: false,\r\n            selectedRule: null,\r\n            unsavedRules: {},\r\n            ready: false,\r\n            isLeftBarOpen: window.localStorage.getItem('App.menuHidden') === 'true',\r\n        };\r\n        this.commands = this.getSelectedLanguageCommands();\r\n        this.isMobile = this.props.width === 'sm' || this.props.width === 'xs';\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromConfig()\r\n            .then(({ rules, ...settings }) => {\r\n                const rulesWithId = rules.map(rule =>\r\n                    !rule.id || !rule.name\r\n                        ? {\r\n                              ...rule,\r\n                              id: rule.id || uuid(),\r\n                              name: rule.name || window.commands[rule.template]?.name[I18n.getLanguage()] || window.commands[rule.template]?.name.en,\r\n                          }\r\n                        : rule\r\n                );\r\n\r\n                if (!isEqual(rules, rulesWithId)) {\r\n                    this.props.saveConfig({ rules: rulesWithId, ...settings });\r\n                    setTimeout(() => this.setState({rules: rulesWithId}), 50);\r\n                }\r\n            });\r\n\r\n        if (this.isMobile) {\r\n            this.setState({isLeftBarOpen: true});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.settings?.language !== this.state.lang && this.state.settings?.language) {\r\n            const lang = this.state.settings?.language;\r\n            I18n.setLanguage(lang);\r\n\r\n            this.commands = this.getSelectedLanguageCommands();\r\n        }\r\n\r\n        if (\r\n            prevState.selectedRule?.id !== this.state.selectedRule?.id &&\r\n            prevState.selectedRule?.id && this.state.selectedRule\r\n        ) {\r\n            localStorage.setItem('selectedRule', this.state.selectedRule.id);\r\n        }\r\n    }\r\n\r\n    getSelectedLanguageCommands = () => {\r\n        const lang = this.state?.settings?.language || I18n.getLanguage();\r\n\r\n        return [\r\n            { rule: I18n.t('Select rule'), unique: false },\r\n            ...Object.entries(window.commands).map(item => {\r\n                const [key, command] = item;\r\n                const { name, ...rest } = command;\r\n                const obj = {\r\n                    ...rest,\r\n                    rule: command?.name[lang],\r\n                    template: key,\r\n                    unique: command.unique,\r\n                    words: command.words && command.words[lang],\r\n                    args: command.args?.map(arg => ({\r\n                        ...arg,\r\n                        name: arg.name[lang] || '',\r\n                        default: arg.default !== undefined ? arg.default : (arg.type === 'checkbox' ? false : ''),\r\n                    })),\r\n                    ack: command.ack && {\r\n                        ...command.ack,\r\n                        name: command.ack.name[lang],\r\n                        default: !command.ack?.default\r\n                            ? command.ack?.type === 'checkbox'\r\n                                ? false\r\n                                : ''\r\n                            : command.ack.default[lang],\r\n                    },\r\n                };\r\n\r\n                return obj;\r\n            }),\r\n        ];\r\n    };\r\n\r\n    commands = this.getSelectedLanguageCommands();\r\n\r\n    moveRule = (dragIndex, hoverIndex) => {\r\n        const { rules } = this.state;\r\n        const sourceRule = rules.find((_, index) => index === hoverIndex);\r\n        const sortRules = rules.filter((_, index) => index !== hoverIndex);\r\n        sortRules.splice(dragIndex, 0, sourceRule);\r\n        this.setState({ rules: sortRules });\r\n    };\r\n\r\n    handleOpen = add => {\r\n        if (add) {\r\n            this.setState({isEdit: false, isCopy: false, isOpen: true});\r\n        } else {\r\n            this.setState({isOpen: true,});\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ isOpen: false });\r\n    };\r\n\r\n    handleSubmitOnCreate = (selectedRule, isError) => {\r\n        if (isError) {\r\n            return;\r\n        }\r\n\r\n        const id = uuid();\r\n        const shortDataRule = {\r\n            ...selectedRule,\r\n            id,\r\n            _break: true,\r\n        };\r\n\r\n        const rule = {\r\n            ...this.commands.find(command => command.rule === shortDataRule.rule),\r\n            ...shortDataRule,\r\n        };\r\n        const isUnsavedChanges = Object.values(this.state.unsavedRules).length;\r\n\r\n        this.setState(\r\n            {\r\n                rules: [...this.state.rules, rule],\r\n                unsavedRules: {\r\n                    ...this.state.unsavedRules,\r\n                    [id]: {\r\n                        id,\r\n                        wasChangedGlobally: true,\r\n                    },\r\n                },\r\n                selectedRule: !isUnsavedChanges ? rule : this.state.selectedRule,\r\n            },\r\n            () => {\r\n                if (isUnsavedChanges) {\r\n                    this.selectRule(rule.id);\r\n                }\r\n            }\r\n        );\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleSubmitOnEdit = (selectedRule, isError) => {\r\n        if (isError) {\r\n            return;\r\n        }\r\n\r\n        const unsavedRules = JSON.parse(JSON.stringify(this.state.unsavedRules));\r\n        unsavedRules[selectedRule.id] = { id: selectedRule.id, wasChangedGlobally: true};\r\n\r\n        this.setState({\r\n            unsavedRules,\r\n            rules: this.updateRule(selectedRule),\r\n        });\r\n        this.handleClose();\r\n    };\r\n\r\n    handleSubmitOnCopy = (selectedRule, isError) => {\r\n        if (isError) {\r\n            return;\r\n        }\r\n\r\n        const newRule = JSON.parse(JSON.stringify(selectedRule));\r\n        newRule.id = uuid();\r\n\r\n        const rules = JSON.parse(JSON.stringify(this.state.rules));\r\n        rules.push(newRule);\r\n\r\n        const unsavedRules = JSON.parse(JSON.stringify(this.state.unsavedRules));\r\n        unsavedRules[newRule.id] = {id: newRule.id, wasChangedGlobally: true};\r\n\r\n        this.setState({\r\n                rules,\r\n                unsavedRules,\r\n                selectedRule: newRule,\r\n                isOpen: false\r\n            },\r\n            () => {\r\n                this.selectRule(newRule.id);\r\n            }\r\n        );\r\n    };\r\n\r\n    selectRule = id => {\r\n        const { selectedRule, rules } = this.state;\r\n\r\n        if (selectedRule.id === id) {\r\n            // ignore\r\n            if (this.isMobile) {\r\n                this.setState({isLeftBarOpen: false});\r\n            }\r\n        } else if (this.state.unsavedRules[selectedRule.id]) {\r\n            this.setState({\r\n                pendingSelectedRuleId: id,\r\n            });\r\n        } else {\r\n            const rule = rules.find(item => item.id === id);\r\n\r\n            this.setState({\r\n                selectedRule: rule,\r\n                isLeftBarOpen: this.isMobile ? false : this.state.isLeftBarOpen\r\n            });\r\n        }\r\n    };\r\n\r\n    updateRule = selectedRule => {\r\n        const rules = JSON.parse(JSON.stringify(this.state.rules));\r\n\r\n        const item = rules.find(item => item.id === selectedRule.id);\r\n        rules[rules.indexOf(item)] = selectedRule;\r\n\r\n        return rules;\r\n    };\r\n\r\n    handleEdit = () => {\r\n        this.setState({isEdit: true, isCopy: false}, () =>\r\n            this.handleOpen());\r\n    };\r\n\r\n    handleCopy = () => {\r\n        this.setState({isCopy: true, isEdit: true}, () =>\r\n            this.handleOpen());\r\n    };\r\n\r\n    finishEdit = editableRule => {\r\n        let selectedRule;\r\n\r\n        const { rule, id, name, _break, template } = editableRule;\r\n\r\n        // if rule was updated => apply fields\r\n        if (this.state.selectedRule.rule !== rule) {\r\n            const updatedRuleOptions = this.commands.find(command => command.rule === rule);\r\n\r\n            selectedRule = {\r\n                ...updatedRuleOptions,\r\n                name,\r\n                rule,\r\n                id,\r\n                _break,\r\n                template,\r\n            };\r\n        } else {\r\n            selectedRule = JSON.parse(JSON.stringify(editableRule));\r\n        }\r\n\r\n        const rules = JSON.parse(JSON.stringify(this.state.rules));\r\n        const _rule = rules.find(it => it.id === selectedRule.id);\r\n        if (_rule) {\r\n            rules[rules.indexOf(_rule)] = selectedRule;\r\n        } else {\r\n            rules.push(selectedRule);\r\n        }\r\n\r\n        this.setState({\r\n            isEdit: false,\r\n            isCopy: false,\r\n            rules,\r\n            selectedRule,\r\n        });\r\n    };\r\n\r\n    removeRule = id => {\r\n        const rules = this.state.rules.filter(rule => rule.id !== id);\r\n\r\n        this.setState(\r\n            {\r\n                rules,\r\n                selectedRule: rules.length ? rules[rules.length - 1] : null,\r\n            },\r\n            () => {\r\n                this.props.readConfig()\r\n                    .then(config => {\r\n                        const { rules, ...settings } = config;\r\n                        const newConfig = { rules: rules.filter(rule => rule.id !== id), ...settings };\r\n                        this.props.saveConfig(newConfig);\r\n                    });\r\n            });\r\n    };\r\n\r\n    updateConfig = async currentSelectedRule => {\r\n        const { [currentSelectedRule.id]: removedId, ...ids } = this.state.unsavedRules;\r\n        const config = await this.props.readConfig();\r\n        const { rules, ...settings } = config;\r\n\r\n        const matchingRule = rules.find(rule => rule.id === currentSelectedRule.id);\r\n        const updatedCurrentRules = this.updateRule(currentSelectedRule)\r\n\r\n        let updatedRules;\r\n        if (matchingRule) {\r\n            updatedRules = rules.map(rule =>\r\n                rule.id === currentSelectedRule.id\r\n                    ? this.getRuleShortData(currentSelectedRule)\r\n                    : rule\r\n            );\r\n        } else {\r\n            updatedRules = [...rules, this.getRuleShortData(currentSelectedRule)];\r\n        }\r\n\r\n        const newConfig = { rules: updatedRules, ...settings };\r\n        await this.props.saveConfig(newConfig);\r\n\r\n        this.setState({\r\n            selectedRule: currentSelectedRule || this.state.selectedRule || null,\r\n            rules: updatedCurrentRules,\r\n            unsavedRules: ids,\r\n        });\r\n    };\r\n\r\n    getDataFromConfig = () => {\r\n        return this.props.readConfig()\r\n            .then(config => {\r\n                const { rules, ...settings } = config;\r\n                const lang = I18n.getLanguage();\r\n\r\n                const currentRules = rules.map(rule => {\r\n                    const obj = window.commands[rule?.template];\r\n\r\n                    if (!obj) {\r\n                        window.alert(`Unknown rule: \"${rule?.template}\". Please report an issue on Github!`);\r\n                        return null;\r\n                    }\r\n\r\n                    return {\r\n                        ...obj,\r\n                        rule: obj?.name[lang],\r\n                        ack: {\r\n                            ...obj.ack,\r\n                            default: rule.ack || (obj.ack?.type === 'checkbox' ? false : ''),\r\n                            name: obj.ack?.name[lang],\r\n                        },\r\n                        args: obj.args?.map((arg, index) => ({\r\n                            ...arg,\r\n                            default: rule.args[index] || (arg?.type === 'checkbox' ? false : ''),\r\n                            name: arg?.name[lang] || '',\r\n                        })),\r\n                        name: rule.name || obj?.name[lang],\r\n                        words: rule.words,\r\n                        _break: rule._break,\r\n                        id: rule.id || uuid(),\r\n                        template: rule.template,\r\n                    };\r\n                })\r\n                    .filter(rule => rule);\r\n\r\n                this.setState({\r\n                    rules: currentRules,\r\n                    ready: true,\r\n                    selectedRule:\r\n                        currentRules.find(rule => rule.id === localStorage.getItem('selectedRule')) ||\r\n                        currentRules[currentRules.length - 1] ||\r\n                        null,\r\n                    settings,\r\n                });\r\n\r\n                return config;\r\n            });\r\n    };\r\n\r\n    revertChangesFromConfig = async selectedRule => {\r\n        const actualRules = this.state.rules;\r\n        const { [selectedRule.id]: removedId, ...ids } = this.state.unsavedRules;\r\n        const config = await this.props.readConfig();\r\n        const { rules, ...settings } = config;\r\n\r\n        const matchingRule = rules.find(rule => rule.id === selectedRule.id);\r\n        const isRuleWasUpdatedGlobally = this.state.unsavedRules[selectedRule.id]\r\n            ?.wasChangedGlobally;\r\n\r\n        let updatedRules;\r\n        if (matchingRule && isRuleWasUpdatedGlobally) {\r\n            updatedRules = actualRules.map(rule =>\r\n                rule.id === matchingRule.id\r\n                    ? {\r\n                          ...rule,\r\n                          ack: {\r\n                              ...rule.ack,\r\n                              default: matchingRule.ack || '',\r\n                          },\r\n                          args: rule.args?.map(arg => ({\r\n                              ...arg,\r\n                              default: matchingRule.arg || '',\r\n                          })),\r\n                          rule: window.commands[matchingRule.template].name[I18n.getLanguage()],\r\n                          words: matchingRule.words || '',\r\n                          name: matchingRule.name || '',\r\n                          _break: matchingRule._break || true,\r\n                      }\r\n                    : rule\r\n            );\r\n        } else if (!matchingRule) {\r\n            updatedRules = actualRules.filter(rule => rule.id !== selectedRule.id);\r\n        }\r\n\r\n        const newState = {\r\n            rules: updatedRules || actualRules,\r\n            selectedRule:\r\n                (isRuleWasUpdatedGlobally\r\n                    ? updatedRules.find(rule => rule.id === selectedRule.id)\r\n                    : this.state.selectedRule) || null,\r\n            settings,\r\n            unsavedRules: ids,\r\n        };\r\n\r\n        if (this.state.rules.length !== newState.rules.length) {\r\n            newState.selectedRule = newState.rules[newState.rules.length - 1] || null;\r\n        }\r\n\r\n        this.setState(newState);\r\n    };\r\n\r\n    saveSettings = async (localeSettings, closeModal) => {\r\n        const config = await this.props.readConfig();\r\n        const { rules } = config;\r\n\r\n        const newConfig = { rules, ...localeSettings };\r\n        await this.props.saveConfig(newConfig);\r\n        this.setState({settings: localeSettings}, () =>\r\n            closeModal());\r\n    };\r\n\r\n    setUnsavedRule = id => {\r\n        this.setState({\r\n            unsavedRules: {\r\n                ...this.state.unsavedRules,\r\n                [id]: {\r\n                    id,\r\n                    wasChangedGlobally: false,\r\n                },\r\n            },\r\n        });\r\n    };\r\n\r\n    removeUnsavedRule = id => {\r\n        const { [id]: removedId, ...ids } = this.state.unsavedRules;\r\n        this.setState({\r\n            unsavedRules: ids,\r\n        });\r\n    };\r\n\r\n    getRuleShortData = ({ _break, template, words, ack, args, name, id }) => ({\r\n        words: words || '',\r\n        ack: ack?.default || '',\r\n        args: args?.map(arg => arg.default) || [],\r\n        _break,\r\n        template,\r\n        name,\r\n        id,\r\n    });\r\n\r\n    clearStateOnConfirmModalUnmount = id => {\r\n        const { [id]: removedId, ...ids } = this.state.unsavedRules;\r\n\r\n        this.setState({\r\n            pendingSelectedRuleId: false,\r\n            unsavedRules: ids,\r\n        });\r\n    };\r\n\r\n    toggleLeftBar = () => {\r\n        window.localStorage.setItem('App.menuHidden', !this.state.isLeftBarOpen);\r\n        this.setState({isLeftBarOpen: !this.state.isLeftBarOpen,});\r\n    };\r\n\r\n    closeDrawer = () => {\r\n        this.setState({isLeftBarOpen: false});\r\n    };\r\n\r\n    renderModalDialog() {\r\n        return this.state.isOpen ?\r\n            <CreateRuleDialog\r\n                key=\"modal\"\r\n                commands={this.commands}\r\n                isEdit={this.state.isEdit}\r\n                isCopy={this.state.isCopy}\r\n                handleSubmitOnCreate={this.handleSubmitOnCreate}\r\n                handleSubmitOnEdit={this.handleSubmitOnEdit}\r\n                handleSubmitOnCopy={this.handleSubmitOnCopy}\r\n                handleClose={this.handleClose}\r\n                isOpen={this.state.isOpen}\r\n                rules={this.state.rules}\r\n                selectedRule={this.state.selectedRule}\r\n                finishEdit={this.finishEdit}\r\n            />\r\n         : null;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        const { classes } = this.props;\r\n        const { rules, selectedRule, isLeftBarOpen } = this.state;\r\n\r\n        if (!this.state.ready) {\r\n            return null;\r\n        }\r\n\r\n        if (this.isMobile) {\r\n            return <React.Fragment>\r\n                <Drawer\r\n                    anchor=\"left\"\r\n                    open={this.state.isLeftBarOpen}\r\n                    onClose={this.closeDrawer}>\r\n                    <DrawerComponent\r\n                        themeType={this.props.themeType}\r\n                        handleOpen={this.handleOpen}\r\n                        rules={rules}\r\n                        moveRule={this.moveRule}\r\n                        handleEdit={this.handleEdit}\r\n                        handleCopy={this.handleCopy}\r\n                        selectRule={this.selectRule}\r\n                        selectedRule={selectedRule}\r\n                        removeRule={this.removeRule}\r\n                        settings={this.state.settings}\r\n                        socket={this.props.socket}\r\n                        saveSettings={this.saveSettings}\r\n                        theme={this.props.theme}\r\n                        toggleLeftBar={this.toggleLeftBar}\r\n                        unsavedRules={this.state.unsavedRules}\r\n                        isMobile={this.isMobile}\r\n                        closeDrawer={this.closeDrawer}\r\n                    />\r\n                </Drawer>\r\n                {this.state.settings && selectedRule ?\r\n                    <RuleEditor\r\n                        key={selectedRule.id}\r\n                        selectedRule={selectedRule}\r\n                        socket={this.props.socket}\r\n                        updateConfig={this.updateConfig}\r\n                        revertChangesFromConfig={this.revertChangesFromConfig}\r\n                        pendingSelectedRuleId={this.state.pendingSelectedRuleId}\r\n                        unsavedRules={this.state.unsavedRules}\r\n                        selectRule={this.selectRule}\r\n                        clearStateOnConfirmModalUnmount={this.clearStateOnConfirmModalUnmount}\r\n                        lang={this.state.settings.language}\r\n                        setUnsavedRule={this.setUnsavedRule}\r\n                        removeUnsavedRule={this.removeUnsavedRule}\r\n                        toggleLeftBar={this.toggleLeftBar}\r\n                        isLeftBarOpen={this.state.isLeftBarOpen}\r\n                        isMobile={this.isMobile}\r\n                    />\r\n                    :\r\n                    <div className={classes.noRulesText}>{I18n.t('Create a new rule with a \"+\" on the left')}</div>}\r\n\r\n                {this.renderModalDialog()}\r\n            </React.Fragment>;\r\n        } else {\r\n            return <React.Fragment>\r\n                <SplitterLayout\r\n                    key=\"splitterLayout\"\r\n                    customClassName={clsx(\r\n                        isLeftBarOpen ? classes.hidden : classes.opened,\r\n                        classes.layout\r\n                    )}\r\n                    primaryMinSize={350}\r\n                    primaryIndex={1}\r\n                    secondaryMinSize={350}\r\n                    onSecondaryPaneSizeChange={size => (this.menuSize = parseFloat(size))}\r\n                    onDragEnd={() => window.localStorage.setItem('App.menuSize', this.menuSize.toString())}\r\n                    secondaryInitialSize={this.menuSize}>\r\n                    <DrawerComponent\r\n                        handleOpen={this.handleOpen}\r\n                        rules={rules}\r\n                        moveRule={this.moveRule}\r\n                        handleEdit={this.handleEdit}\r\n                        handleCopy={this.handleCopy}\r\n                        selectRule={this.selectRule}\r\n                        selectedRule={selectedRule}\r\n                        removeRule={this.removeRule}\r\n                        instance={this.props.instance}\r\n                        settings={this.state.settings}\r\n                        socket={this.props.socket}\r\n                        saveSettings={this.saveSettings}\r\n                        theme={this.props.theme}\r\n                        unsavedRules={this.state.unsavedRules}\r\n                        isMobile={this.isMobile}\r\n                    />\r\n                    {this.state.settings && selectedRule ?\r\n                        <RuleEditor\r\n                            selectedRule={selectedRule}\r\n                            socket={this.props.socket}\r\n                            updateRule={this.updateRule}\r\n                            updateConfig={this.updateConfig}\r\n                            revertChangesFromConfig={this.revertChangesFromConfig}\r\n                            pendingSelectedRuleId={this.state.pendingSelectedRuleId}\r\n                            unsavedRules={this.state.unsavedRules}\r\n                            selectRule={this.selectRule}\r\n                            clearStateOnConfirmModalUnmount={this.clearStateOnConfirmModalUnmount}\r\n                            lang={this.state.settings.language}\r\n                            setUnsavedRule={this.setUnsavedRule}\r\n                            removeUnsavedRule={this.removeUnsavedRule}\r\n                            toggleLeftBar={this.toggleLeftBar}\r\n                            isLeftBarOpen={this.state.isLeftBarOpen}\r\n                            isMobile={this.isMobile}\r\n                        />\r\n                        :\r\n                        <div className={classes.noRulesText}>{I18n.t('Create a new rule with a \"+\" on the left')}</div>}\r\n                </SplitterLayout>\r\n                {this.renderModalDialog()}\r\n            </React.Fragment>;\r\n        }\r\n    }\r\n}\r\n\r\nLayout.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    instance: PropTypes.number.isRequired,\r\n    readConfig: PropTypes.func.isRequired,\r\n    saveConfig: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(withWidth()(Layout));\r\n","import React from 'react';\r\nimport isEqual from 'lodash.isequal';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Loader from '@iobroker/adapter-react/Components/Loader';\r\nimport I18n from '@iobroker/adapter-react/i18n';\r\nimport GenericApp from '@iobroker/adapter-react/GenericApp';\r\n\r\nimport Layout from './components/Layout';\r\n\r\nconst styles = theme => ({\r\n    root: {},\r\n    logo: {\r\n        width: 32,\r\n        height: 32,\r\n        padding: theme.spacing(1),\r\n        display: 'inline-block',\r\n    },\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = {...props};\r\n        extendedProps.translations = {\r\n            'en': require('./i18n/en'),\r\n            'de': require('./i18n/de'),\r\n            'ru': require('./i18n/ru'),\r\n            'pt': require('./i18n/pt'),\r\n            'nl': require('./i18n/nl'),\r\n            'fr': require('./i18n/fr'),\r\n            'it': require('./i18n/it'),\r\n            'es': require('./i18n/es'),\r\n            'pl': require('./i18n/pl'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        super(props, extendedProps);\r\n    }\r\n\r\n    onConnectionReady() {\r\n        const newState = {};\r\n\r\n        this.socket\r\n            .getSystemConfig()\r\n            .then(systemConfig => {\r\n                newState.systemConfig = systemConfig;\r\n                return this.readConfig();\r\n            })\r\n            .then(config => {\r\n                console.log(config);\r\n                newState.config = config || false;\r\n                newState.ready = true;\r\n                this.setState(newState);\r\n                if (config.language !== I18n.getLanguage() && config.language) {\r\n                    I18n.setLanguage(config.language);\r\n                }\r\n            })\r\n            .catch(e => this.showError(e));\r\n    }\r\n\r\n    readConfig() {\r\n        return this.socket\r\n            .getObject(`system.adapter.${this.adapterName}.${this.instance}`)\r\n            .then(config => {\r\n                config = config || {};\r\n                const native = config.native || {};\r\n                native.rules = native.rules || [];\r\n                native.sayitInstance = native.sayitInstance || '';\r\n                native.language = native.language || '';\r\n                native.processorId = native.processorId || '';\r\n                native.processorTimeout = native.processorTimeout || 1000;\r\n                return native;\r\n            });\r\n    }\r\n\r\n    saveConfig(config) {\r\n        return this.socket\r\n            .getObject(`system.adapter.${this.adapterName}.${this.instance}`)\r\n            .then(obj => {\r\n                if (!isEqual(obj.native, config)) {\r\n                    obj.native = config;\r\n                    return this.socket.setObject(\r\n                        `system.adapter.${this.adapterName}.${this.instance}`,\r\n                        obj\r\n                    );\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.config || !this.state.ready) {\r\n            return <MuiThemeProvider theme={this.state.theme}>\r\n                <Loader theme={this.state.themeType} />\r\n                {this.state.config === false ? <div>No instance found</div> : null}\r\n            </MuiThemeProvider>;\r\n        }\r\n\r\n        return <MuiThemeProvider theme={this.state.theme}>\r\n            <div className=\"App\">\r\n                <Layout\r\n                    themeType={this.state.themeType}\r\n                    theme={this.state.theme}\r\n                    socket={this.socket}\r\n                    instance={this.instance}\r\n                    readConfig={this.readConfig.bind(this)}\r\n                    saveConfig={this.saveConfig.bind(this)}\r\n                />\r\n                {this.renderError()}\r\n            </div>\r\n        </MuiThemeProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport * as SentryIntegrations from '@sentry/integrations';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { version } from '../package.json';\r\nimport theme from '@iobroker/adapter-react/Theme';\r\nimport Utils from '@iobroker/adapter-react/Components/Utils';\r\n\r\nwindow.adapterName = 'text2command';\r\nlet themeName = Utils.getThemeName();\r\n\r\nconsole.log('iobroker.' + window.adapterName + '@' + version + ' using theme \"' + themeName + '\"');\r\n\r\nfunction build() {\r\n    return ReactDOM.render(\r\n        <MuiThemeProvider theme={theme(themeName)}>\r\n            <App\r\n                onThemeChange={_theme => {\r\n                    themeName = _theme;\r\n                    build();\r\n                }}\r\n            />\r\n        </MuiThemeProvider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n\r\n// if not local development\r\nif (window.location.host !== 'localhost:3000') {\r\n    Sentry.init({\r\n        dsn: 'https://9806f910556240219f831ecfe2ee3ad1@sentry.iobroker.net/87',\r\n        release: 'iobroker.' + window.adapterName + '@' + version,\r\n        integrations: [new SentryIntegrations.Dedupe()],\r\n    });\r\n}\r\n\r\nbuild();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}